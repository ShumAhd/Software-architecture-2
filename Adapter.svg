<?xml version="1.0" encoding="UTF-8"?>
<!-- Do not edit this file with editors other than draw.io -->
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="581px" height="773px" viewBox="-0.5 -0.5 581 773" content="&lt;mxfile host=&quot;Electron&quot; modified=&quot;2023-09-05T12:33:01.188Z&quot; agent=&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/21.6.5 Chrome/114.0.5735.243 Electron/25.3.1 Safari/537.36&quot; etag=&quot;Tj9gcvQjO9ISnX1ip3Bg&quot; version=&quot;21.6.5&quot; type=&quot;device&quot;&gt;&#10;  &lt;diagram name=&quot;Страница 1&quot; id=&quot;cKW-T-5nnkgJHS1upnvU&quot;&gt;&#10;    &lt;mxGraphModel dx=&quot;1687&quot; dy=&quot;1005&quot; grid=&quot;1&quot; gridSize=&quot;10&quot; guides=&quot;0&quot; tooltips=&quot;1&quot; connect=&quot;1&quot; arrows=&quot;1&quot; fold=&quot;1&quot; page=&quot;1&quot; pageScale=&quot;1&quot; pageWidth=&quot;827&quot; pageHeight=&quot;1169&quot; math=&quot;0&quot; shadow=&quot;0&quot;&gt;&#10;      &lt;root&gt;&#10;        &lt;mxCell id=&quot;0&quot; /&gt;&#10;        &lt;mxCell id=&quot;1&quot; parent=&quot;0&quot; /&gt;&#10;        &lt;mxCell id=&quot;GsknchvEnhREbcNgrHTX-1&quot; value=&quot;&amp;lt;font style=&amp;quot;font-size: 14px;&amp;quot;&amp;gt;Adapter method&amp;lt;/font&amp;gt;&quot; style=&quot;text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;30&quot; y=&quot;28&quot; width=&quot;120&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;GsknchvEnhREbcNgrHTX-3&quot; value=&quot;Диаграмма классов паттерна &amp;quot;Adapter&amp;quot;&quot; style=&quot;text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;20&quot; y=&quot;60&quot; width=&quot;240&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;GsknchvEnhREbcNgrHTX-6&quot; value=&quot;Для демонстрации работы шаблона проектирования Adapter, представлю пример, в котором адаптер используется для преобразования интерфейса одного устройства (USB) в интерфейс другого устройства (HDMI).&quot; style=&quot;shape=note;size=20;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;40&quot; y=&quot;140&quot; width=&quot;190&quot; height=&quot;170&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;GsknchvEnhREbcNgrHTX-7&quot; value=&quot;&amp;lt;p style=&amp;quot;margin:0px;margin-top:4px;text-align:center;&amp;quot;&amp;gt;&amp;lt;i&amp;gt;&amp;amp;lt;&amp;amp;lt;Interface&amp;amp;gt;&amp;amp;gt;&amp;lt;/i&amp;gt;&amp;lt;br&amp;gt;HDMIInterface&amp;lt;br&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;hr size=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;p style=&amp;quot;margin:0px;margin-left:4px;&amp;quot;&amp;gt;+&amp;amp;nbsp;connectHDMI(): void&amp;lt;br&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;p style=&amp;quot;margin:0px;margin-left:4px;&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/p&amp;gt;&quot; style=&quot;verticalAlign=top;align=left;overflow=fill;fontSize=12;fontFamily=Helvetica;html=1;whiteSpace=wrap;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;400&quot; y=&quot;80&quot; width=&quot;200&quot; height=&quot;80&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;GsknchvEnhREbcNgrHTX-9&quot; value=&quot;&amp;lt;p style=&amp;quot;margin:0px;margin-top:4px;text-align:center;&amp;quot;&amp;gt;&amp;lt;b&amp;gt;Class&amp;amp;nbsp;&amp;lt;/b&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;div style=&amp;quot;text-align: center;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;HDMIDevice&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;hr size=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;p style=&amp;quot;margin:0px;margin-left:4px;&amp;quot;&amp;gt;&amp;lt;/p&amp;gt;&amp;amp;nbsp;+ connectHDMI(): void&amp;lt;p style=&amp;quot;margin:0px;margin-left:4px;&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/p&amp;gt;&quot; style=&quot;verticalAlign=top;align=left;overflow=fill;fontSize=12;fontFamily=Helvetica;html=1;whiteSpace=wrap;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;400&quot; y=&quot;240&quot; width=&quot;200&quot; height=&quot;80&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;GsknchvEnhREbcNgrHTX-10&quot; value=&quot;&amp;lt;p style=&amp;quot;margin:0px;margin-top:4px;text-align:center;&amp;quot;&amp;gt;&amp;lt;b&amp;gt;Class&amp;amp;nbsp;&amp;lt;/b&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;div style=&amp;quot;text-align: center;&amp;quot;&amp;gt;USBDevice &amp;lt;br&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;hr size=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;p style=&amp;quot;margin:0px;margin-left:4px;&amp;quot;&amp;gt;&amp;lt;/p&amp;gt;&amp;amp;nbsp;+&amp;amp;nbsp;connectUSB(): void&amp;lt;p style=&amp;quot;margin:0px;margin-left:4px;&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/p&amp;gt;&quot; style=&quot;verticalAlign=top;align=left;overflow=fill;fontSize=12;fontFamily=Helvetica;html=1;whiteSpace=wrap;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;400&quot; y=&quot;560&quot; width=&quot;200&quot; height=&quot;80&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;GsknchvEnhREbcNgrHTX-12&quot; value=&quot;&amp;lt;p style=&amp;quot;margin:0px;margin-top:4px;text-align:center;&amp;quot;&amp;gt;&amp;lt;i&amp;gt;&amp;amp;lt;&amp;amp;lt;Interface&amp;amp;gt;&amp;amp;gt;&amp;lt;/i&amp;gt;&amp;lt;br&amp;gt; USBInterface&amp;lt;br&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;hr size=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;p style=&amp;quot;margin:0px;margin-left:4px;&amp;quot;&amp;gt;&amp;lt;/p&amp;gt;&amp;amp;nbsp;+ connectUSB(): void&amp;lt;p style=&amp;quot;margin:0px;margin-left:4px;&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/p&amp;gt;&quot; style=&quot;verticalAlign=top;align=left;overflow=fill;fontSize=12;fontFamily=Helvetica;html=1;whiteSpace=wrap;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;400&quot; y=&quot;400&quot; width=&quot;200&quot; height=&quot;80&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;GsknchvEnhREbcNgrHTX-21&quot; value=&quot;&amp;lt;p style=&amp;quot;margin:0px;margin-top:4px;text-align:center;&amp;quot;&amp;gt;USBToHDMIAdapter&amp;lt;br&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;hr size=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;p style=&amp;quot;margin:0px;margin-left:4px;&amp;quot;&amp;gt;&amp;lt;/p&amp;gt;&amp;amp;nbsp;- usbDevice: USBInterface&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;p style=&amp;quot;margin:0px;margin-left:4px;&amp;quot;&amp;gt;+ connectHDMI(): void&amp;lt;br&amp;gt;&amp;lt;/p&amp;gt;&quot; style=&quot;verticalAlign=top;align=left;overflow=fill;fontSize=12;fontFamily=Helvetica;html=1;whiteSpace=wrap;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;400&quot; y=&quot;720&quot; width=&quot;200&quot; height=&quot;80&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;GsknchvEnhREbcNgrHTX-24&quot; value=&quot;Use&quot; style=&quot;endArrow=open;endSize=12;dashed=1;html=1;rounded=0;entryX=0.473;entryY=0.998;entryDx=0;entryDy=0;entryPerimeter=0;exitX=0.474;exitY=0.029;exitDx=0;exitDy=0;exitPerimeter=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;GsknchvEnhREbcNgrHTX-9&quot; target=&quot;GsknchvEnhREbcNgrHTX-7&quot;&gt;&#10;          &lt;mxGeometry width=&quot;160&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;400&quot; y=&quot;340&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;560&quot; y=&quot;340&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;GsknchvEnhREbcNgrHTX-25&quot; value=&quot;Use&quot; style=&quot;endArrow=open;endSize=12;dashed=1;html=1;rounded=0;entryX=0.473;entryY=0.998;entryDx=0;entryDy=0;entryPerimeter=0;exitX=0.474;exitY=0.029;exitDx=0;exitDy=0;exitPerimeter=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;160&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;495&quot; y=&quot;402.15999999999997&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;495&quot; y=&quot;320.15999999999997&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;GsknchvEnhREbcNgrHTX-26&quot; value=&quot;Use&quot; style=&quot;endArrow=open;endSize=12;dashed=1;html=1;rounded=0;entryX=0.473;entryY=0.998;entryDx=0;entryDy=0;entryPerimeter=0;exitX=0.474;exitY=0.029;exitDx=0;exitDy=0;exitPerimeter=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;160&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;495&quot; y=&quot;562&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;495&quot; y=&quot;480&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;GsknchvEnhREbcNgrHTX-27&quot; value=&quot;Use&quot; style=&quot;endArrow=open;endSize=12;dashed=1;html=1;rounded=0;entryX=0.473;entryY=0.998;entryDx=0;entryDy=0;entryPerimeter=0;exitX=0.474;exitY=0.029;exitDx=0;exitDy=0;exitPerimeter=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;160&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;495&quot; y=&quot;722&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;495&quot; y=&quot;640&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;      &lt;/root&gt;&#10;    &lt;/mxGraphModel&gt;&#10;  &lt;/diagram&gt;&#10;&lt;/mxfile&gt;&#10;"><defs/><g><rect x="10" y="0" width="120" height="30" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 15px; margin-left: 70px;"><div data-drawio-colors="color: rgb(240, 240, 240); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(240, 240, 240); line-height: 1.2; pointer-events: all; white-space: nowrap;"><font style="font-size: 14px;">Adapter method</font></div></div></div></foreignObject><text x="70" y="19" fill="rgb(240, 240, 240)" font-family="Helvetica" font-size="12px" text-anchor="middle">Adapter method</text></switch></g><rect x="0" y="32" width="240" height="30" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 47px; margin-left: 120px;"><div data-drawio-colors="color: rgb(240, 240, 240); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(240, 240, 240); line-height: 1.2; pointer-events: all; white-space: nowrap;">Диаграмма классов паттерна "Adapter"</div></div></div></foreignObject><text x="120" y="51" fill="rgb(240, 240, 240)" font-family="Helvetica" font-size="12px" text-anchor="middle">Диаграмма классов паттерна "Adapter"</text></switch></g><path d="M 20 112 L 190 112 L 210 132 L 210 282 L 20 282 L 20 112 Z" fill="rgb(24, 20, 29)" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="all"/><path d="M 190 112 L 190 132 L 210 132" fill="none" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 188px; height: 1px; padding-top: 197px; margin-left: 21px;"><div data-drawio-colors="color: rgb(240, 240, 240); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(240, 240, 240); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">Для демонстрации работы шаблона проектирования Adapter, представлю пример, в котором адаптер используется для преобразования интерфейса одного устройства (USB) в интерфейс другого устройства (HDMI).</div></div></div></foreignObject><text x="115" y="201" fill="rgb(240, 240, 240)" font-family="Helvetica" font-size="12px" text-anchor="middle">Для демонстрации работы шаблона проектирования Adapter, представлю пример, в котором адаптер используется для преобразования интерфейса одного устройства (USB)...</text></switch></g><rect x="380" y="52" width="200" height="80" fill="rgb(24, 20, 29)" stroke="rgb(240, 240, 240)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 202px; height: 80px; padding-top: 52px; margin-left: 380px;"><div data-drawio-colors="color: rgb(240, 240, 240); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 200px; height: 80px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(240, 240, 240); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: normal; overflow-wrap: normal;"><p style="margin:0px;margin-top:4px;text-align:center;"><i>&lt;&lt;Interface&gt;&gt;</i><br />HDMIInterface<br /></p><hr size="1" /><p style="margin:0px;margin-left:4px;">+ connectHDMI(): void<br /></p><p style="margin:0px;margin-left:4px;"><br /></p></div></div></div></foreignObject><text x="380" y="64" fill="rgb(240, 240, 240)" font-family="Helvetica" font-size="12px">&lt;&lt;Interface&gt;&gt;...</text></switch></g><rect x="380" y="212" width="200" height="80" fill="rgb(24, 20, 29)" stroke="rgb(240, 240, 240)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 202px; height: 80px; padding-top: 212px; margin-left: 380px;"><div data-drawio-colors="color: rgb(240, 240, 240); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 200px; height: 80px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(240, 240, 240); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: normal; overflow-wrap: normal;"><p style="margin:0px;margin-top:4px;text-align:center;"><b>Class </b></p><div style="text-align: center;"><span style="background-color: initial;">HDMIDevice</span></div><hr size="1" /><p style="margin:0px;margin-left:4px;"></p> + connectHDMI(): void<p style="margin:0px;margin-left:4px;"><br /></p></div></div></div></foreignObject><text x="380" y="224" fill="rgb(240, 240, 240)" font-family="Helvetica" font-size="12px">Class...</text></switch></g><rect x="380" y="532" width="200" height="80" fill="rgb(24, 20, 29)" stroke="rgb(240, 240, 240)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 202px; height: 80px; padding-top: 532px; margin-left: 380px;"><div data-drawio-colors="color: rgb(240, 240, 240); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 200px; height: 80px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(240, 240, 240); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: normal; overflow-wrap: normal;"><p style="margin:0px;margin-top:4px;text-align:center;"><b>Class </b></p><div style="text-align: center;">USBDevice <br /></div><hr size="1" /><p style="margin:0px;margin-left:4px;"></p> + connectUSB(): void<p style="margin:0px;margin-left:4px;"><br /></p></div></div></div></foreignObject><text x="380" y="544" fill="rgb(240, 240, 240)" font-family="Helvetica" font-size="12px">Class...</text></switch></g><rect x="380" y="372" width="200" height="80" fill="rgb(24, 20, 29)" stroke="rgb(240, 240, 240)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 202px; height: 80px; padding-top: 372px; margin-left: 380px;"><div data-drawio-colors="color: rgb(240, 240, 240); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 200px; height: 80px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(240, 240, 240); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: normal; overflow-wrap: normal;"><p style="margin:0px;margin-top:4px;text-align:center;"><i>&lt;&lt;Interface&gt;&gt;</i><br /> USBInterface<br /></p><hr size="1" /><p style="margin:0px;margin-left:4px;"></p> + connectUSB(): void<p style="margin:0px;margin-left:4px;"><br /></p></div></div></div></foreignObject><text x="380" y="384" fill="rgb(240, 240, 240)" font-family="Helvetica" font-size="12px">&lt;&lt;Interface&gt;&gt;...</text></switch></g><rect x="380" y="692" width="200" height="80" fill="rgb(24, 20, 29)" stroke="rgb(240, 240, 240)" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 202px; height: 80px; padding-top: 692px; margin-left: 380px;"><div data-drawio-colors="color: rgb(240, 240, 240); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 200px; height: 80px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(240, 240, 240); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: normal; overflow-wrap: normal;"><p style="margin:0px;margin-top:4px;text-align:center;">USBToHDMIAdapter<br /></p><hr size="1" /><p style="margin:0px;margin-left:4px;"></p> - usbDevice: USBInterface<br /><br /><p style="margin:0px;margin-left:4px;">+ connectHDMI(): void<br /></p></div></div></div></foreignObject><text x="380" y="704" fill="rgb(240, 240, 240)" font-family="Helvetica" font-size="12px">USBToHDMIAdapter...</text></switch></g><path d="M 474.8 214.32 L 474.61 134.08" fill="none" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><path d="M 481.13 145.94 L 474.6 132.96 L 468.13 145.97" fill="none" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 173px; margin-left: 475px;"><div data-drawio-colors="color: rgb(240, 240, 240); background-color: rgb(24, 20, 29); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(240, 240, 240); line-height: 1.2; pointer-events: all; background-color: rgb(24, 20, 29); white-space: nowrap;">Use</div></div></div></foreignObject><text x="475" y="177" fill="rgb(240, 240, 240)" font-family="Helvetica" font-size="11px" text-anchor="middle">Use</text></switch></g><path d="M 475 374.16 L 475 294.4" fill="none" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><path d="M 481.5 306.28 L 475 293.28 L 468.5 306.28" fill="none" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 333px; margin-left: 475px;"><div data-drawio-colors="color: rgb(240, 240, 240); background-color: rgb(24, 20, 29); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(240, 240, 240); line-height: 1.2; pointer-events: all; background-color: rgb(24, 20, 29); white-space: nowrap;">Use</div></div></div></foreignObject><text x="475" y="336" fill="rgb(240, 240, 240)" font-family="Helvetica" font-size="11px" text-anchor="middle">Use</text></switch></g><path d="M 475 534 L 475 454.24" fill="none" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><path d="M 481.5 466.12 L 475 453.12 L 468.5 466.12" fill="none" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 493px; margin-left: 475px;"><div data-drawio-colors="color: rgb(240, 240, 240); background-color: rgb(24, 20, 29); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(240, 240, 240); line-height: 1.2; pointer-events: all; background-color: rgb(24, 20, 29); white-space: nowrap;">Use</div></div></div></foreignObject><text x="475" y="496" fill="rgb(240, 240, 240)" font-family="Helvetica" font-size="11px" text-anchor="middle">Use</text></switch></g><path d="M 475 694 L 475 614.24" fill="none" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><path d="M 481.5 626.12 L 475 613.12 L 468.5 626.12" fill="none" stroke="rgb(240, 240, 240)" stroke-miterlimit="10" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 653px; margin-left: 475px;"><div data-drawio-colors="color: rgb(240, 240, 240); background-color: rgb(24, 20, 29); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(240, 240, 240); line-height: 1.2; pointer-events: all; background-color: rgb(24, 20, 29); white-space: nowrap;">Use</div></div></div></foreignObject><text x="475" y="656" fill="rgb(240, 240, 240)" font-family="Helvetica" font-size="11px" text-anchor="middle">Use</text></switch></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.drawio.com/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Text is not SVG - cannot display</text></a></switch></svg>